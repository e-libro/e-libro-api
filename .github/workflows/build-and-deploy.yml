name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u e-libro --password-stdin

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/e-libro/e-libro-api:latest

      - name: Notify build success
        if: success()
        run: echo "Build succeeded!"

      - name: Notify Build failure
        if: failure()
        run: echo "Build failed!"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to VPS
        env:
          DB_URL: ${{ secrets.DB_URL }}
          PORT: ${{ secrets.PORT }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
          ENCRYPTION_SECRET_KEY: ${{ secrets.ENCRYPTION_SECRET_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << EOF
            echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u e-libro --password-stdin

            if [ \$(docker ps -a -q -f name=e-libro-api) ]; then
              docker stop e-libro-api
              docker rm e-libro-api
            fi

            if [ \$(docker images -q ghcr.io/e-libro/e-libro-api:latest) ]; then
              docker rmi ghcr.io/e-libro/e-libro-api:latest
            fi

            docker pull ghcr.io/e-libro/e-libro-api:latest

            echo $DB_URL > ~/.e-libro-api.env
            echo $PORT >> ~/.e-libro-api.env
            echo $CORS_ORIGIN >> ~/.e-libro-api.env
            echo $ACCESS_TOKEN_SECRET >> ~/.e-libro-api.env
            echo $REFRESH_TOKEN_SECRET >> ~/.e-libro-api.env
            echo $ENCRYPTION_SECRET_KEY >> ~/.e-libro-api.env
                        
            docker run -d --name e-libro-api --env-file ~/.e-libro-api.env -p 8081:8081 ghcr.io/e-libro/e-libro-api
          EOF

      - name: Notify build success
        if: success()
        run: echo "Build succeeded!"

      - name: Notify build failure
        if: failure()
        run: echo "Build failed!"
